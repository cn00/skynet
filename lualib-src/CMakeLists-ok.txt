
include_directories(
        ${PROJECT_SOURCE_DIR}/lualib-src
        ${PROJECT_SOURCE_DIR}/lualib-src/sproto
        ${PROJECT_SOURCE_DIR}/service-src
        ${PROJECT_SOURCE_DIR}/skynet-src
        ${PROJECT_SOURCE_DIR}/3rd/lua
        ${PROJECT_SOURCE_DIR}/3rd/lua-md5
        ${PROJECT_SOURCE_DIR}/3rd/lpeg
)
add_definitions(-fPIC)

set(CMAKE_C_FLAGS  "${CMAKE_C_FLAGS} -Wl,-E -DNOUSE_JEMALLOC" )

# skynet.so
file(GLOB_RECURSE lualib_SRC 
        ./*.h
        ./*.c
        ../skynet-src/*.h
        ../skynet-src/*.c
)
source_group_by_dir(${CMAKE_CURRENT_SOURCE_DIR} lualib_SRC)

find_library(JEMALLOC_LIB jemalloc_pic ../3rd/jemalloc/lib)
IF(NOT JEMALLOC_LIB)
    message(FATAL_ERROR "jemalloc_pic not found")
ENDIF(NOT JEMALLOC_LIB)
message(STATUS "jemalloc_pic found in " ${JEMALLOC_LIB})

add_library(skynet SHARED ${lualib_SRC} )
target_link_libraries(skynet lua pthread m dl)
target_link_libraries(skynet ${JEMALLOC_LIB})

# set(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/luaclib)

#client.so
add_library(client SHARED
        lua-clientsocket.c
        lua-crypt.c
        lsha1.c)
target_link_libraries(client skynet)

#bson.so
add_library(bson SHARED lua-bson.c )
target_link_libraries(bson skynet)


#md5.so
file(GLOB_RECURSE md5_SRC 
        ../3rd/lua-md5/*.h
        ../3rd/lua-md5/*.c
)
add_library(md5 SHARED ${md5_SRC})
target_link_libraries(md5 skynet)

#sproto.so
file(GLOB_RECURSE sproto_SRC 
        sproto/*.h
        sproto/*.c
)
add_library(sproto SHARED ${sproto_SRC})
target_link_libraries(sproto skynet)


# lpeg.so
file(GLOB_RECURSE lpeg_SRC 
        ../3rd/lpeg/[^.]*.h
        ../3rd/lpeg/[^.]*.c
)
add_library(lpeg SHARED ${lpeg_SRC})
target_link_libraries(lpeg skynet)
